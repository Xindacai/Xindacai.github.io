

.product-detail-container {
  display: flex;
  flex-wrap: wrap;
  gap: 2rem;
  padding: 3rem 2rem;
  max-width: 1200px;
  margin: auto;
/* This is the layout for the product page section. */  
}

.product-images {
  flex: 1;
  min-width: 300px;
  text-align: center;
}

.main-product-img {
  width: 100%;
  max-width: 500px;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

/* Right side info styling */
.product-info {
  flex: 1;
  min-width: 300px;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  padding: 1rem;
}

/* Product title */
.product-title {
  font-family: var(--font-display);
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 1rem;
  color: var(--accent-color);
/* Out of all text elements in my products page, the product title is the largest and boldest
because the title should be the webpage's main attraction, so it should stand out the most. */  
}

.product-price {
  font-family: var(--font-primary);
  font-size: 1.4rem;
/* I made the product's pricing text slightly smaller than the title text and lighter in color
and weight, but still quite large compared to my other text elements. Because the product's
price is also an important piece of information for the user, I want to make it easy for them
to see it. */  
  margin-bottom: 1.5rem;
}

/* Product description */
.product-description {
  font-family: var(--font-secondary);
  font-size: 1rem;
  margin-bottom: 2rem;
  line-height: 1.6;
}

.size-label {
  font-family: var(--font-secondary);
  font-size: 0.95rem;
  margin-bottom: 0.5rem;
}

.add-to-cart-btn {
  font-family: var(--font-primary);
  background-color: var(--accent-color);
  color: #fff;
  font-size: 1rem;
  padding: 0.6rem 1.2rem;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  /* This provides user feedback when the cursor is hovered over the button, which tells the user
  they have selected the button. */
  margin-top: 1rem;
  margin-bottom: 1.5rem;
  transition: background-color 0.3s ease;
  width: auto; 
  align-self: flex-start;
  /* This command makes sure that the button's background wouldn't become overstretched across the
  screen. */
  text-decoration: none;        
  /* My Add to Cart button's text originally had some strange underlines before because I set it 
  as a clickable link. So this command removes that underline and makes my button's text look 
  cleaner. */
}

.add-to-cart-btn:hover {
  background-color: #333333;
 /* The color change provides visual feedback when the user hovers over the add to cart button. */ 
}

.size-dropdown {
  padding: 0.5rem;
  font-family: var(--font-secondary);
  font-size: 1rem;
  border-radius: 4px;
  border: 1px solid #ccc;
  width: 100%;
  max-width: 200px;
  margin-bottom: 1rem;
  /* I added a bit of space between my size selector and add to cart button, so they aren't too
  clustered towards each other. */
}

@media (max-width: 768px) {
  .product-detail-container {
    flex-direction: column;
    align-items: center;
  }

  .product-title {
    font-size: 1.8rem;
  }

  .product-price {
    font-size: 1.3rem;
  }

  .add-to-cart-btn {
    width: 100%;
    text-align: center;
  }
}

/*
This CSS ensures the product page visually aligns with the homepage and category pages, maintaining a clean, professional, and organized user experience.

- Fonts are reused consistently across text elements to build branding identity.
- The layout prioritizes product visuals and essential interaction features like size selection and "Add to Cart".
- Responsiveness ensures the layout remains functional across screen sizes.
- Hover effects offer subtle feedback without overwhelming the user.

These design choices are based on standard UI/UX practices for commercial shopping websites and reflect the user-first goals discussed in the presentation.
*/